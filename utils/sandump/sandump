#!/bin/sh

if [ ! -f "/usr/sbin/tshark3_2" ]; then
    echo "Error! /usr/sbin/tshark3_2 not available, please install it"
    exit 1
fi

SRC_DST_FILE=src_dst_sandump
if [ ! -f "$SRC_DST_FILE" ]; then
    echo "0.0.0.0     Agent" >> $SRC_DST_FILE
    echo "1.1.1.1     Vrouter" >> $SRC_DST_FILE
fi

# Parameters
socket="/var/run/vrouter/dpdk_netlink"

# Extract repetition
port=9989
source_socket="$(dirname "${socket}")/$(basename "${socket}").orig"

usage() {
    echo "Sandump - Sandesh dump utility"
    echo "Usage:"
    echo "       $0 -w <filename> [filename to write the sandesh packets]"
    echo "       $0 -c <filename> [force cleanup]"
    exit 1
}

sandump_close() {
    mv -f "${source_socket}" "${socket}"
}

if [ $# -eq 1 ];
then
    usage
fi

# Handle command-line arguments
if [ $# -eq 2 ];
then
    if [ $1 = "-w" ];
    then
        fn=$2
        echo "Dumping into $fn"
    elif [ $1 = "-c" ];
    then
        mv -f "${source_socket}" "${socket}"
        exit 0
    fi
fi

# Check if all required packages are installed
socat -V >/dev/null 2>&1
if [ $? -ne 0 ];
then
    echo "Error! socat utility is not present, please install"
    exit 1
fi

# Check tshark is installed
tshark -v >/dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "Error! tshark not available, please install wireshark"
    exit 1
fi

## set signal handler
trap "echo $0: closing...; \
    sandump_close; exit 0" \
    HUP INT QUIT ABRT PIPE TERM

# Actual logic to sniff sandesh packets
# Move socket files
mv "${socket}" "${source_socket}"

socat -t100 "UDP-LISTEN:${port},reuseaddr,fork" "UNIX-CONNECT:${source_socket}" &
socat -t100 "UNIX-LISTEN:${socket},mode=777,reuseaddr,fork" "UDP:localhost:${port}" &

if [ "$fn" = "" ];
then
    tshark3_2 -t ad  -Nn -H $SRC_DST_FILE -i lo -F pcapng "dst port ${port} or src port ${port}"
else
    tshark3_2 -t ad  -Nn -H $SRC_DST_FILE -i lo -w "$fn" -F pcapng "dst port ${port} or src port ${port}"
fi
